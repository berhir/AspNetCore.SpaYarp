<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>
    <Nullable>enable</Nullable>
    <IsPackable>false</IsPackable>
    <ImplicitUsings>enable</ImplicitUsings>
    <!-- SpaYarp configuration -->
    <SpaRootOne>ClientAppOne\</SpaRootOne>
    <SpaRootTwo>ClientAppTwo\</SpaRootTwo>
    <SpaClientUrl></SpaClientUrl>
    <!-- SpaLaunchCommand specified here once, since it is the same for both apps. Otherwise it could've been specified in 'DevServerOptionsOne' and 'DevServerOptionsTwo' classes in Program.cs -->
    <SpaLaunchCommand>npm start</SpaLaunchCommand>
  </PropertyGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRootOne)**" />
    <None Remove="$(SpaRootOne)**" />
    <None Include="$(SpaRootOne)**" Exclude="$(SpaRootOne)node_modules\**" />
  </ItemGroup>
  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRootTwo)**" />
    <None Remove="$(SpaRootTwo)**" />
    <None Include="$(SpaRootTwo)**" Exclude="$(SpaRootTwo)node_modules\**" />
  </ItemGroup>

  <!--<ItemGroup>
    <PackageReference Include="AspNetCore.SpaYarp" Version="1.1.0" />
  </ItemGroup>-->

  <ItemGroup>
    <ProjectReference Include="..\..\src\AspNetCore.SpaYarp\AspNetCore.SpaYarp.csproj" />
  </ItemGroup>

  <!-- Import target file manually. This is not needed if 'AspNetCore.SpaYarp' gets added via NuGet. -->
  <Import Project="..\..\src\AspNetCore.SpaYarp\build\AspNetCore.SpaYarp.targets" />

  <Target Name="DebugEnsureNodeEnvOne" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRootOne)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRootOne)" Command="npm install" />
  </Target>

  <Target Name="DebugEnsureNodeEnvTwo" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRootTwo)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRootTwo)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRootOne)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRootOne)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRootTwo)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRootTwo)" Command="npm run build -- --prod" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRootOne)dist\**; $(SpaRootOne)dist-server\**; $(SpaRootTwo)dist-server\**; $(SpaRootTwo)dist-server\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
  
</Project>
